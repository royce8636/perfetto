# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("../../../gn/perfetto_cc_proto_descriptor.gni")
import("../../../gn/test.gni")

source_set("minimal") {
  sources = [
    "default_modules.cc",
    "default_modules.h",
    "fuchsia/fuchsia_trace_utils.h",
  ]
  deps = [
    "../../../gn:default_deps",
    "../../protozero",
    "../containers",
    "../sorter",
    "../storage",
    "../tables",
    "../types",
    "../util",
    "../util:gzip",
    "../util:proto_to_args_parser",
    "../util:stack_traces_util",
    "common",
    "common:parser_types",
    "ftrace:minimal",
    "fuchsia:fuchsia_record",
    "memory_tracker:graph_processor",
    "proto:minimal",
  ]
}

source_set("full") {
  sources = [
    "additional_modules.cc",
    "additional_modules.h",
    "fuchsia/fuchsia_trace_parser.cc",
    "fuchsia/fuchsia_trace_parser.h",
    "fuchsia/fuchsia_trace_tokenizer.cc",
    "fuchsia/fuchsia_trace_tokenizer.h",
    "fuchsia/fuchsia_trace_utils.cc",
    "gzip/gzip_trace_parser.cc",
    "gzip/gzip_trace_parser.h",
    "json/json_trace_parser.cc",
    "json/json_trace_parser.h",
    "json/json_trace_tokenizer.cc",
    "json/json_trace_tokenizer.h",
    "systrace/systrace_line_parser.cc",
    "systrace/systrace_line_parser.h",
    "systrace/systrace_line_tokenizer.cc",
    "systrace/systrace_line_tokenizer.h",
    "systrace/systrace_trace_parser.cc",
    "systrace/systrace_trace_parser.h",
  ]
  public_deps = [ "../:storage_minimal" ]
  deps = [
    ":minimal",
    "../../../gn:default_deps",
    "../../../include/perfetto/ext/base:base",
    "../../../protos/perfetto/trace/ftrace:zero",
    "../../protozero",
    "../containers",
    "../sorter",
    "../storage",
    "../tables",
    "../types",
    "../util",
    "../util:gzip",
    "../util:proto_profiler",
    "../views",
    "android_bugreport",
    "common",
    "common:parser_types",
    "ftrace:full",
    "fuchsia:fuchsia_record",
    "json:minimal",
    "proto:full",
    "proto:minimal",
    "systrace:systrace_line",
    "systrace:systrace_parser",
  ]
}

perfetto_cc_proto_descriptor("gen_cc_config_descriptor") {
  descriptor_name = "config.descriptor"
  descriptor_target = "../../../protos/perfetto/config:descriptor"
}

perfetto_cc_proto_descriptor("gen_cc_chrome_track_event_descriptor") {
  descriptor_name = "chrome_track_event.descriptor"
  descriptor_target = "../../../protos/third_party/chromium:descriptor"
}

perfetto_cc_proto_descriptor("gen_cc_track_event_descriptor") {
  descriptor_name = "track_event.descriptor"
  descriptor_target = "../../../protos/perfetto/trace/track_event:descriptor"
}

perfetto_unittest_source_set("unittests") {
  testonly = true
  sources = [
    "ftrace/binder_tracker_unittest.cc",
    "ftrace/sched_event_tracker_unittest.cc",
    "ftrace/thread_state_tracker_unittest.cc",
    "fuchsia/fuchsia_parser_unittest.cc",
    "fuchsia/fuchsia_trace_utils_unittest.cc",
    "memory_tracker/graph_processor_unittest.cc",
    "memory_tracker/graph_unittest.cc",
    "memory_tracker/raw_process_memory_node_unittest.cc",
    "proto/perf_sample_tracker_unittest.cc",
    "proto/proto_trace_parser_unittest.cc",
    "syscalls/syscall_tracker_unittest.cc",
    "systrace/systrace_parser_unittest.cc",
  ]
  deps = [
    ":full",
    ":minimal",
    "..:gen_cc_test_messages_descriptor",
    "../../../gn:default_deps",
    "../../../gn:gtest_and_gmock",
    "../../../protos/perfetto/common:cpp",
    "../../../protos/perfetto/common:zero",
    "../../../protos/perfetto/config:zero",
    "../../../protos/perfetto/trace:cpp",
    "../../../protos/perfetto/trace:minimal_zero",
    "../../../protos/perfetto/trace:zero",
    "../../../protos/perfetto/trace/android:zero",
    "../../../protos/perfetto/trace/chrome:zero",
    "../../../protos/perfetto/trace/ftrace:zero",
    "../../../protos/perfetto/trace/gpu:zero",
    "../../../protos/perfetto/trace/interned_data:zero",
    "../../../protos/perfetto/trace/profiling:cpp",
    "../../../protos/perfetto/trace/profiling:zero",
    "../../../protos/perfetto/trace/ps:zero",
    "../../../protos/perfetto/trace/sys_stats:zero",
    "../../../protos/perfetto/trace/track_event:zero",
    "../../base",
    "../../protozero",
    "../../protozero:testing_messages_zero",
    "../sorter",
    "../storage",
    "../types",
    "../util",
    "../util:descriptors",
    "../util:proto_to_args_parser",
    "common",
    "ftrace:full",
    "json:minimal",
    "memory_tracker:graph_processor",
    "proto:minimal",
    "syscalls:full",
    "systrace:systrace_parser",
  ]

  if (enable_perfetto_trace_processor_json) {
    sources += [
      "json/json_trace_tokenizer_unittest.cc",
      "json/json_utils_unittest.cc",
    ]
  }
}
